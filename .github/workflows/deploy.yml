name: Deploy to GitHub Pages

# Run workflow on every push to the main branch
on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and manifest updates
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Update quiz manifests
      run: |
        echo "Current directory: $(pwd)"
        echo "Listing quiz directories:"
        ls -la wwwroot/quizzes/
        echo "Running manifest update script:"
        python3 scripts/update-manifests.py
        echo "Manifest files after update:"
        cat wwwroot/quizzes/lie-quiz/manifest.json
        cat wwwroot/quizzes/sort-quiz/manifest.json
        cat wwwroot/quizzes/year-quiz/manifest.json
        
    - name: Commit manifest updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add wwwroot/quizzes/*/manifest.json
        if git diff --staged --quiet; then
          echo "No manifest changes to commit"
        else
          git commit -m "Auto-update quiz manifests before deployment"
          git push
        fi
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore -c Release
      
    - name: Publish
      run: dotnet publish -c Release -o dist --nologo
      
    - name: Add .nojekyll file
      run: touch dist/wwwroot/.nojekyll
      
    # 404.html is already included in the build, no need to copy
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist/wwwroot'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 